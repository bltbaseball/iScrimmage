@model IEnumerable<Web.Models.League>

@{
    ViewBag.Title = "Leagues";
}
@section scripts {
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function initGrid() {
            $('button').button();
            $('table.listing').on('click', 'button.command.delete', function (e) {
                // confirm deletion
                var itemName = $(this).next('input[type=hidden]').val();
                var dialog = $('div#delete-item-dialog');
                $('div', dialog).text('Are you sure you want to delete the "{0}" league?'.replace('{0}', itemName));
                dialog.dialog('open');
                dialog.data('form', $(this).parent());
                e.preventDefault();
                $(this).blur(); // reset button focus
            });
        }

        $(document).ready(function () {
            initGrid();

        // delete alert dialog
        $('div#delete-item-dialog').dialog({
            autoOpen: false,
            resizable: false,
            
            modal: true,
            buttons: {
                'Delete': function () {
                    // replace text with contact name

                    // simply submit associated form
                    var form = $(this).data('form');
                    form.submit();
                },
                'Cancel': function () {
                    $(this).dialog('close');
                }
            }
        });
    });

</script>
}

<h2 style="float:left">Leagues</h2>
<p style="float:right">
    @Html.ActionLink("Create New", "Create")
</p>
@if (TempData.ContainsKey("LeagueCreated") && ((bool)(TempData["LeagueCreated"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-success">
        <span class="ui-icon ui-icon-circle-check"></span>
        <span>League added successfully.</span>
    </div>
}
@if (TempData.ContainsKey("LeagueDeleted") && ((bool)(TempData["LeagueDeleted"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-success">
        <span class="ui-icon ui-icon-circle-check"></span>
        <span>League deleted successfully.</span>
    </div>
}

<div id="leagues">
@{
    var grid = new WebGrid(canPage: false);
    grid.Bind(Model, autoSortAndPage: true);
    
    @grid.GetHtml(headerStyle: "header", 
        tableStyle: "listing dataTableActivate", htmlAttributes: new { dataTableHeight = "500px" }, 
        alternatingRowStyle: "even", 
        rowStyle: "odd",
        columns: grid.Columns(
            grid.Column("Edit", style: "center", header: " ", format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="League", action ="Edit", id = item.Id})" method="get" class="edit-link">
                        <button class="command edit">Edit</button>
                    </form>                    
                    </text>, 
                canSort: false),
            grid.Column("Name", header: "Name", canSort: false),
            grid.Column("StartDate", header: "Start Date", canSort: false, format:@<text>@item.StartDate.ToShortDateString()</text>),
            grid.Column("EndDate", header: "End Date", canSort: false, format:@<text>@item.EndDate.ToShortDateString()</text>),
            grid.Column("IsActive", style:"center", header: "Active", canSort: false, format: @<text>
                    <input type="checkbox" name="IsActive" disabled="disabled" value="@item.IsActive" @(item.IsActive ? Html.Raw("checked=\"checked\"") : Html.Raw("")) />
                </text>),
            grid.Column("Type", header: "Type", canSort: false),
            grid.Column("CreatedOn", header: "Created On", canSort: false),
            
            //grid.Column("Edit", style:"center", header: " ", format: (item) => Html.ActionLink("Edit", "Edit", "League", new { id = (int)item.Id }, new { style = "color:#000" }), canSort: false),
            //grid.Column("Delete", style:"center", header: " ", format: (item) => Html.ActionLink("Delete", "Delete", new { id = (int)item.Id }, new { onclick = "return confirm('Are you sure you want to delete this League?')", style = "color:#000" }), canSort: false)
            grid.Column("Delete", style: "center", header: " ",
                format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="League", action ="Delete", id = item.Id})" method="post" class="delete-link">
                        <button class="command delete">Delete</button>
                        <input type="hidden" value="@item.Name" />
                        @Html.AntiForgeryToken()
                    </form>
                    </text>,
                canSort: false
            )
        )
    );
}
</div>

<div id="delete-item-dialog" class="dialog" title="Delete Team">
    <span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span><div> </div>
    <input type="hidden" id="hfDeleteItemId" />
</div>

@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Url)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationStartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationEndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RosterLockedOn)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Url)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RegistrationStartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RegistrationEndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RosterLockedOn)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
