@model Web.Models.TeamListModel

@{
    ViewBag.Title = "Teams";
}
@section scripts {
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function initGrid() {
            $('button').button();
            $('table.listing').on('click', 'button.command.delete', function (e) {
                // confirm deletion
                var itemName = $(this).next('input[type=hidden]').val();
                var dialog = $('div#delete-item-dialog');
                $('div', dialog).text('Are you sure you want to delete the "{0}" team?'.replace('{0}', itemName));
                dialog.dialog('open');
                dialog.data('form', $(this).parent());
                e.preventDefault();
                $(this).blur(); // reset button focus
            });
        }

        $(document).ready(function () {
            initGrid();

            $('[ptip!=""]').qtip({
                hide: { fixed: true, delay: 250 }, content: { attr: 'ptip' }
            });

        // delete alert dialog
        $('div#delete-item-dialog').dialog({
            autoOpen: false,
            resizable: false,
            
            modal: true,
            buttons: {
                'Delete': function () {
                    // replace text with contact name

                    // simply submit associated form
                    var form = $(this).data('form');
                    form.submit();
                },
                'Cancel': function () {
                    $(this).dialog('close');
                }
            }
        });
    });

</script>
    <style>
        .center {
            text-align: center;
        }
    </style>
}

<h2 style="float:left;">Teams</h2>
<span style="float:left;padding-left:30px;font-weight:bold;"><a href="@Url.Action("Create")" pTip="Add a new team or register an existing team for a scrimmage, league, or tournament"><img src="/Images/add.png" style="vertical-align:middle;padding-bottom:0px;padding-right:5px;"/>Add Team/Register</a></span>
<br />
<br />
@if (TempData.ContainsKey("TeamCreated") && ((bool)(TempData["TeamCreated"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-success">
        <span class="ui-icon ui-icon-circle-check"></span>
        <span>Team added successfully. Please create your roster now.</span>
    </div>
}
@if (TempData.ContainsKey("TeamDeleted") && ((bool)(TempData["TeamDeleted"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-success">
        <span class="ui-icon ui-icon-circle-check"></span>
        <span>Team deleted successfully.</span>
    </div>
}
@if (TempData.ContainsKey("TeamCopied") && ((bool)(TempData["TeamCopied"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-success">
        <span class="ui-icon ui-icon-circle-check"></span>
        <span>Team copied successfully.</span>
    </div>
}
@if (TempData.ContainsKey("Error"))
{
    <div class="status-indicator ui-corner-all ui-state-error">
        <span class="ui-icon ui-icon-alert"></span>
        <span>@TempData["Error"].ToString()</span>
    </div>
}

@*<p>
    @Html.ActionLink("Copy Existing", "Copy")
</p>*@

<div id="teams">
@{
    var grid = new WebGrid(canPage: false);
    grid.Bind(Model.Teams.OrderByDescending(t => t.Team.CreatedOn).ToList(), autoSortAndPage: true);
    
    @grid.GetHtml(headerStyle: "header",
        tableStyle: "listing dataTableActivate", htmlAttributes: new { dataTableHeight = "500px" },
        alternatingRowStyle: "even",
        rowStyle: "odd",
        columns: grid.Columns(
            grid.Column("Players", style:"center", header: " ", format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="TeamPlayer", action ="Index", id = item.Team.Id})" method="post" class="edit-link">
                        <button class="command edit">Manage</button>
                    </form>
                    </text>, canSort: false),
            grid.Column("Team.Name", header: "Name", canSort: false, format: @<text><a href="@Url.RouteUrl(new { controller = "Overview", action = "Team", id = item.Team.Id })">@item.Team.Name @item.Team.Division.Name @item.Team.Class.Name (@item.Team.Players.Count.ToString())</a>  </text>),
            grid.Column("Team.League.Name", header: "League", canSort: false, format: @<text>@item.Team.League.Name</text>),
            grid.Column("Team.Division.Name", header: "Division", canSort: false, format: @<text>@item.Team.Division.Name</text>),
            grid.Column("Team.Class.Name", header: "Team Class", canSort: false, format: @<text>@item.Team.Class.Name</text>),
            grid.Column("Team.CreatedOn", header: "Created", canSort: false),
            grid.Column("Pay", style:"center", header: "Fees", format: @<text>
    @if(item.IsPaid) {
        if(Web.Models.Fee.GetFeesForLeague(item.Team.League).Count == 0) {
            <strong>Free</strong>
        } else {
            <strong>Paid</strong>   
        }
    } else {
        <form action="@Url.RouteUrl(new{ controller="Home", action ="League", id= item.Team.League.Id, teamId = item.Team.Id})" method="get" class="edit-link">
            <button class="command edit">Pay</button>
        </form>
                    
    }
                    </text>, canSort: false),
            grid.Column("AvailableDates", style: "center", header: " ", format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="Team", action ="EditAvailableDates", id = item.Team.Id})" method="get" class="edit-link">
                        <button class="command edit" style="width:130px">Available Dates</button>
                    </form>                    
                    </text>, 
                canSort: false),
            grid.Column("Edit", style: "center", header: " ", format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="Team", action ="Edit", id = item.Team.Id})" method="get" class="edit-link">
                        <button class="command edit">Edit</button>
                    </form>                    
                    </text>, 
                canSort: false),
            grid.Column("Delete", style: "center", header: " ",
                format: @<text>
                    <form action="@Url.RouteUrl(new{ controller="Team", action ="Delete", id = item.Team.Id})" method="post" class="delete-link">
                        <button class="command delete">Delete</button>
                        <input type="hidden" value="@item.Team.Name" />
                        @Html.AntiForgeryToken()
                    </form>
                    </text>,
                canSort: false)

        )
    );
}
</div>

<div id="delete-item-dialog" class="dialog" title="Delete Team">
    <span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span><div> </div>
    <input type="hidden" id="hfDeleteItemId" />
</div>

@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaxAge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaxAge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedOn)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
