@model IList<Web.Models.GameInfoModel>

<div id="games">            
@{
    var grid = new WebGrid(canPage: false);
    var gridColumns = new WebGridColumn[20];
    gridColumns = grid.Columns(
    grid.Column("Game.GetLeagueName", header: "Event", canSort: false),
    grid.Column("HomeTeamName", header: "Home Team", canSort: false, format: @<text>@Html.Raw(Web.Models.Team.PrettyNameWithoutLeague(item.HomeTeam, item.Game))</text>),
    grid.Column("AwayTeamName", header: "Away Team", canSort: false, format: @<text>@Html.Raw(Web.Models.Team.PrettyNameWithoutLeague(item.AwayTeam, item.Game))</text>),
    grid.Column("Game.GameDate", header: "Game Date", canSort: false),
    grid.Column("Game.Location.Name", header: "Location", canSort: false, format: @<text>
                            <a href="@Url.RouteUrl(new { controller = "Overview", action = "Location", id = item.Game.Location.Id })">@item.Game.Location.Name</a><br />@item.Game.Field</text>),
    grid.Column("Type", header: "Type", canSort: false),
    grid.Column("Game.Status", header: "Status", canSort: false, format: @<text>@item.Game.Status.ToString()</text>),
    grid.Column("Admin", style: "center", header: " ", format: @<text><span style="white-space:nowrap;">
                    @Html.ActionLink("Enter Scores", "EditScore", "Game", new { id = (int)item.Game.Id }, new { style = "color:#000" }) <br />
                    @Html.ActionLink("Umpires (" + ((item.Game.FieldUmpire != null ? 1 : 0) + (item.Game.PlateUmpire != null ? 1 : 0)).ToString() + ")"
                                , "EditUmpires"
                                , "Game"
                                , new { id = (int)item.Game.Id }
                                , new { style = "color:#000", ptip = 
                                        Html.Raw(
                                        "Plate Umpire: <a href=\"" + Url.RouteUrl(new { controller = "Overview", action = "Umpire", id = item.Game.PlateUmpire != null ? item.Game.PlateUmpire.Id : 0 }) + "\">" + Web.Models.Umpire.GetUmpireName(item.Game.PlateUmpire) + "</a><br>" + 
                                        "Field Umpire: <a href=\"" + Url.RouteUrl(new { controller = "Overview", action = "Umpire", id = item.Game.FieldUmpire != null ? item.Game.FieldUmpire.Id : 0 }) + "\">" + Web.Models.Umpire.GetUmpireName(item.Game.FieldUmpire) + "</a>") })
                    <br />
                    @Html.ActionLink("Edit", "Edit", "Game", new { id = (int)item.Game.Id }, new { style = "color:#000" })  |  
                    @Html.ActionLink("Delete", "Delete", "Game", new { id = (int)item.Game.Id }, new { onclick = "return confirm('Are you sure you want to delete this game?')", style = "color:#000" })
                    </span></text>, canSort: false));
    grid.Bind(Model.OrderByDescending(g => g.Game.GameDate > DateTime.Now ? g.Game.GameDate.Ticks - new DateTime(2050,1,1).Ticks : DateTime.Now.Ticks - g.Game.GameDate.Ticks).ToList(), new[] { "HomeTeamName", "AwayTeamName", "Game.GameDate", "Game.Location.Name", "Type", "Game.Status" }, autoSortAndPage: true);
    
    @grid.GetHtml(headerStyle: "header",
        tableStyle: "listing dataTableActivate", htmlAttributes: new { dataTableHeight = "500px" },
        alternatingRowStyle: "even",
        rowStyle: "odd",
        columns: gridColumns
    );
    @Html.Hidden("dir", grid.SortDirection) 
    @Html.Hidden("col", grid.SortColumn)
}
</div>
