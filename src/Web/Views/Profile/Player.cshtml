@model Web.Models.PlayerProfileModel
@using Web.Helpers
@{
    ViewBag.Title = "Player Profile";
    var playerName = string.Format("{0} {1}", Model.Player.FirstName, Model.Player.LastName).Trim();
    if (string.IsNullOrEmpty(playerName))
    {
        playerName = Model.Player.Email;
    }
}

<h2>Welcome @playerName!</h2>
@if(@Model.Player.DateOfBirth.HasValue) {
<p>Date of Birth:  @Model.Player.DateOfBirth.Value.ToShortDateString()</p>
<p>Minimum Division: @PlayerHelper.PlayerAge(Model.Player.DateOfBirth.Value)U</p>
}


@if (Model.TeamsActive != null)
{    
    <h3>Active Teams</h3>

    if (Model.TeamsActive.Count == 0)
    {
    <p>Not on any teams that are currently active. </p>
    }
    else
    {
    <div id="active-teams-@Model.Player.Id" class="active-teams">
        @{
        var activeTeamGrid = new WebGrid(canPage: false);
        activeTeamGrid.Bind(Model.TeamsActive, autoSortAndPage: true);
        
            @activeTeamGrid.GetHtml(headerStyle: "header",
                tableStyle: "listing dataTableActivate", htmlAttributes: new { dataTableHeight = "500px" },
                alternatingRowStyle: "even",
                rowStyle: "odd",
                columns: activeTeamGrid.Columns(
                    activeTeamGrid.Column("Name", header: "Name", format: @<text>@Html.ActionLink(Web.Models.Team.PrettyName((Web.Models.Team)item.Team).ToString(), "Team", "Overview", new { id = item.Team.Id }, null)</text>, canSort: false),
                    activeTeamGrid.Column("League", header: "League", canSort: false, format: @<text>@item.Team.League.Name</text>),
                    @*activeTeamGrid.Column("Team.Players", style: "center", header: "Roster", canSort: false, format: @<text>@item.Team.Players.Count players</text>),      *@
 activeTeamGrid.Column("Photo", header: "Photo", canSort: false, format: @<text>
            @*@if(!String.IsNullOrEmpty(item.Photo)) 
                        {
                            <img src="~/PlayerImages/@item.Photo-thumb.jpeg" alt="@player.Player.FirstName @player.Player.LastName" />    
                        }*@
            <div id="photo-cont-@item.Id">
                @{
                    string playerPhoto = null;
                    string hidePhoto = "display: none;";
                    if (!string.IsNullOrEmpty(item.Photo))
                    {
                        playerPhoto = "/PlayerImages/" + item.Photo + ".jpeg";
                        hidePhoto = null;
                    }   
                }
                <img class="photo" id="photo-@item.Id" src="@playerPhoto" height="100" width="100"  style="border: 1px solid #999; @hidePhoto"/>
                @* @if(string.IsNullOrEmpty(item.Photo)) {
                            <button class="command AddPhoto" data-id="@item.Id">Add Photo</button>
                        } else {
                            <button class="command AddPhoto" data-id="@item.Id">Change Photo</button>
                        }*@
            </div>
            </text>)
            )
                    );
        }
    </div>
    }
    if (Model.Games != null)
    {
    <h3>Upcoming Games</h3>
            
        if (Model.Games.Count == 0)
        {
    <p>No upcoming games scheduled.</p>
        }
        else
        {
    <div id="upcoming-games-@Model.Player.Id">
        @{
            var grid = new WebGrid(canPage: false);
            var gridColumns = grid.Columns(
                grid.Column("HomeTeam", header: "Home Team", canSort: false, format: @<text><a href="@Url.RouteUrl(new { controller = "Overview", action = "Team", id = item.HomeTeam.Id })">@Web.Models.Team.PrettyName(item.HomeTeam)</a></text>),
                grid.Column("AwayTeam", header: "Away Team", canSort: false, format: @<text><a href="@Url.RouteUrl(new { controller = "Overview", action = "Team", id = item.AwayTeam.Id })">@Web.Models.Team.PrettyName(item.AwayTeam)</a></text>),
                grid.Column("GameDate", header: "Game Date", canSort: false, format: @<text>@item.GameDate.ToString()</text>),
                grid.Column("Location", header: "Location", canSort: false, format: @<text><a href="@Url.RouteUrl(new { controller = "Overview", action = "Location", id = item.Location.Id })">@item.Location.Name</a></text>)
            );

            grid.Bind(Model.Games, autoSortAndPage: true);
            
            @grid.GetHtml(headerStyle: "header",
                    tableStyle: "listing game",
                    alternatingRowStyle: "even",
                    rowStyle: "odd",
                    columns: gridColumns
                );
        }
    </div>
        }
    }

    <h3>Teams Looking For Players</h3>
    <div id="teams-needing-players">
        @{
    var lookingGrid = new WebGrid(canPage: false);
    var lookingGridColumns = lookingGrid.Columns(
        lookingGrid.Column("Name", header: "Name", canSort: false, format: @<text><a href="@Url.RouteUrl(new { controller = "Overview", action = "Team", id = item.Team.Id })">@item.Name</a></text>),
        lookingGrid.Column("League", header: "League", canSort: false),
        lookingGrid.Column("Team.Division.MaxAge", header: "Division", canSort: false, format: @<text>@item.Team.Division.Name</text>),
        lookingGrid.Column("Class", header: "Class", canSort: false),
        lookingGrid.Column("Coaches", header: "Coaches", canSort: false, format: @<text>
            <ul>
                @foreach (var coach in item.Team.Coaches)
                {
                    <li>@coach.FirstName @coach.LastName - <a class="messaging" href="#" data-type="Coach" data-for="@coach.Id" data-to="@coach.FirstName @coach.LastName">Send Email</a> - @coach.PhoneNumber</li>
                }
            </ul>
            </text>)
    );

    lookingGrid.Bind(Model.TeamsLookingForPlayers, autoSortAndPage: true);
    
            @lookingGrid.GetHtml(headerStyle: "header",
                    tableStyle: "listing game",
                    alternatingRowStyle: "even",
                    rowStyle: "odd",
                    columns: lookingGridColumns
                );
        }
    </div>
}


@section scripts {
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
}