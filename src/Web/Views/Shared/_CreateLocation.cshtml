@if (TempData.ContainsKey("LocationLookupFailed") && ((bool)(TempData["LocationLookupFailed"]) == true))
{
    <div class="status-indicator ui-corner-all ui-state-error">
        <span class="ui-icon ui-icon-alert"></span>
        <span>Address is incomplete or incorrect. Please enter the full address, city, state, and zip code.</span>
    </div>
}
@using (Html.BeginForm())
{
@model Web.Models.LocationNewModel
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

<fieldset>
    <legend>Location</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Address)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Address)
        @Html.ValidationMessageFor(model => model.Address)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.City)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.City)
        @Html.ValidationMessageFor(model => model.City)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.State)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.State)
        @Html.ValidationMessageFor(model => model.State)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Zip)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Zip)
        @Html.ValidationMessageFor(model => model.Zip)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Url)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Url)
        @Html.ValidationMessageFor(model => model.Url)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Notes)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Notes)
        @Html.ValidationMessageFor(model => model.Notes)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.GroundsKeeperPhone)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.GroundsKeeperPhone)
        @Html.ValidationMessageFor(model => model.GroundsKeeperPhone)
    </div>
    <p>
        <button id="CreateLocation" class="command create">Create</button>
    </p>
</fieldset>
}